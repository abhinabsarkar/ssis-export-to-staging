<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/16/2024 3:46:36 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CAM83C0VT3"
  DTS:CreatorName="MLIDDOMAIN1\saabhin"
  DTS:DTSID="{29EA5846-0CC3-40B6-B271-3ED81560574D}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="ExportToStaging"
  DTS:PackageType="5"
  DTS:VersionBuild="24"
  DTS:VersionGUID="{3E74B75C-B81A-42D2-AC84-8CADACFB62A0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DBConn]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{280A09B2-08FD-452C-AD87-20E87777B849}"
      DTS:ObjectName="DBConn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=tempdb;Integrated Security=True;Encrypt=False;Application Name=SSIS-Package2-{280A09B2-08FD-452C-AD87-20E87777B849}LocalHost.Abhi;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FBA829A6-0593-4A3C-A9EC-B74254EFE517}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArchiveFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\abhinab\ssis\archive</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D639A76A-1E71-4DE0-81AF-670AC61E735A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ColumnsDataType">
      <DTS:VariableValue
        DTS:DataType="8">NVARCHAR(400)</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{78F0D112-B56B-404A-8170-64483E92EE1A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileDelimiter">
      <DTS:VariableValue
        DTS:DataType="8">,</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A10F7712-E729-4E17-B75B-2C41A7FA00E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B7FA453E-F3A6-43A1-AD30-D63774C176F9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\abhinab\ssis\log</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E35CB8E6-4BE3-4AB3-B7EB-608B18BE16BE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SchemaName">
      <DTS:VariableValue
        DTS:DataType="8">staging</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09B0C01F-195F-4BA7-939B-1EF6FFEDC993}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SourceFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\abhinab\ssis\source</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{31A1A76F-C63A-4929-A286-F1EFC9561C36}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_ebeaa4634b0d460186ef554ec86bc94e"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::ArchiveFolder,User::ColumnsDataType,User::FileDelimiter,User::FileExtension,User::LogFolder,User::SchemaName,User::SourceFolder">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_ebeaa4634b0d460186ef554ec86bc94e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{68DB8594-5268-43E7-AFF2-7C038FA2D452}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_ebeaa4634b0d460186ef554ec86bc94e</RootNamespace>
    <AssemblyName>ST_ebeaa4634b0d460186ef554ec86bc94e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;
#endregion

namespace ST_ebeaa4634b0d460186ef554ec86bc94e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            string datetime = DateTime.Now.ToString("yyyyMMddHHmmss");
            StreamWriter sw = null;
            try
            {
                // Create log file 
                sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString()
                    + "\\" + "Log_" + datetime + ".log");

                //Declare Variables
                string SourceFolderPath = Dts.Variables["User::SourceFolder"].Value.ToString();
                string FileExtension = Dts.Variables["User::FileExtension"].Value.ToString();
                string FileDelimiter = Dts.Variables["User::FileDelimiter"].Value.ToString();
                string ArchiveFolder = Dts.Variables["User::ArchiveFolder"].Value.ToString();
                string ColumnsDataType = Dts.Variables["User::ColumnsDataType"].Value.ToString();
                string SchemaName = Dts.Variables["User::SchemaName"].Value.ToString();
                //string ColumnList = "";


                //Reading file names one by one
                sw.WriteLine("Reading file names one by one");
                string[] fileEntries = Directory.GetFiles(SourceFolderPath, "*" + FileExtension);
                foreach (string fileName in fileEntries)
                {
                    sw.WriteLine("Reading file name: " + fileName);
                    SqlConnection myADONETConnection = new SqlConnection();
                    myADONETConnection = (SqlConnection)
                    (Dts.Connections["DBConn"].AcquireConnection(Dts.Transaction) as SqlConnection);

                    //Writing Data of File Into Table
                    string TableName = "";
                    int counter = 0;
                    string line;
                    string ColumnList = "";
                    //MessageBox.Show(fileName);

                    System.IO.StreamReader SourceFile =
                    new System.IO.StreamReader(fileName);
                    while ((line = SourceFile.ReadLine()) != null)
                    {
                        if (counter == 0)
                        {
                            sw.WriteLine("Building SQL statement to create table");
                            line = line.Replace("\"", "");
                            ColumnList = "[" + line.Replace(FileDelimiter, "],[") + "]";
                            TableName = (((fileName.Replace(SourceFolderPath, "")).Replace(FileExtension, "")).Replace("\\", ""));
                            string CreateTableStatement = "IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[" + SchemaName + "].";
                            CreateTableStatement += "[" + TableName + "]')";
                            CreateTableStatement += " AND type in (N'U'))DROP TABLE [" + SchemaName + "].";
                            CreateTableStatement += "[" + TableName + "] Create Table " + SchemaName + ".[" + TableName + "]";
                            CreateTableStatement += "([" + line.Replace(FileDelimiter, "] " + ColumnsDataType + ",[") + "] " + ColumnsDataType + ")";
                            SqlCommand CreateTableCmd = new SqlCommand(CreateTableStatement, myADONETConnection);
                            sw.WriteLine("SQL statement: " + CreateTableStatement);
                            CreateTableCmd.ExecuteNonQuery();
                            sw.WriteLine("SQL Table created");
                            //MessageBox.Show(CreateTableStatement);

                        }
                        else
                        {
                            if (counter <= 1)
                            {
                                sw.WriteLine("Beginning data insertion into table");
                            }
                            string query = "Insert into " + SchemaName + ".[" + TableName + "] (" + ColumnList + ") ";
                            query += "VALUES('" + line.Replace(FileDelimiter, "','") + "')";                          
                            // MessageBox.Show(query.ToString());
                            SqlCommand myCommand1 = new SqlCommand(query, myADONETConnection);
                            myCommand1.ExecuteNonQuery();
                        }

                        counter++;
                    }
                    sw.WriteLine("Data insertion into table completed. Rows inserted: " + counter);
                    SourceFile.Close();
                    //move the file to archive folder after adding datetime to it
                    File.Move(fileName, ArchiveFolder + "\\" + (fileName.Replace(SourceFolderPath, "")).Replace(FileExtension, "") + "_" + datetime + FileExtension);
                    sw.WriteLine("Moved the file to archive folder after adding datetime to it");
                    Dts.TaskResult = (int)ScriptResults.Success;
                    sw.WriteLine("SSIS Script task completed");
                }
            }
            catch (Exception exception)
            {
                //// Create Log File for Errors
                //using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString()
                //    + "\\" + "ErrorLog_" + datetime + ".log"))
                //{
                //    sw.WriteLine(exception.ToString());
                //    Dts.TaskResult = (int)ScriptResults.Failure;
                //}
                sw.WriteLine(exception.ToString());
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                sw.Close();
                sw.Dispose();
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ebeaa4634b0d460186ef554ec86bc94e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ebeaa4634b0d460186ef554ec86bc94e</msb:DisplayName>
    <msb:ProjectId>{4D3F5BE5-6761-43E5-997D-C70C3692D5EF}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ebeaa4634b0d460186ef554ec86bc94e.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="94b63e6311e74e57ad97f4bbdc3536c5">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>29</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>158</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
    <msb:Breakpoint Include="4d69626a3ca045449465a85ed4aba95e">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>138</msb:LineNumber>
      <msb:ColumnNumber>29</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebeaa4634b0d460186ef554ec86bc94e.Properties.Settings.get_Default():ST_ebeaa4634b0d460186ef554ec86bc94e.Properties.Sett" +
    "ings")]

namespace ST_ebeaa4634b0d460186ef554ec86bc94e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_ebeaa4634b0d460186ef554ec86bc94e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_ebeaa4634b0d460186ef554ec86bc94e")]
[assembly: AssemblyCopyright("Copyright @ 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebeaa4634b0d460186ef554ec86bc94e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebeaa4634b0d460186ef554ec86bc94e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_ebeaa4634b0d460186ef554ec86bc94e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_ebeaa4634b0d460186ef554ec86bc94e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_ebeaa4634b0d460186ef554ec86bc94e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_ebeaa4634b0d460186ef554ec86bc94e.dll">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
EAABAUEGaAAZAQEGbgCJACEFBgDpABMGdQAhAQoEewDpAGAEUgApAYIEggCRACEFEAABAY8AhwAB
AUEGjQABAUEGlAAxASEFmgA5AaAGoQBBAQIBVgBJAWkDVgBBAX4BBgAJAUoDpQDpAFsGAQARAX4B
BgARAYQBBgBxACEFBgCxACEFBgBRAcIAqwBRAZMGtAC5ACEFugDZACEFBgAIABQA1AAIABgA2QAp
AHMAQQEuAAsAGQEuABMAIgEuABsAQQEuACMASgEuACsAcwEuADMAcwEuADsAeQEuAEMASgEuAEsA
kQEuAFMAcwEuAFsAugFDAGMA2QBJAHMAQQFhAHsA2QBjAGsA2QAbAAMAAQAEAAMAAADnBAoBAABC
AQ8BAABTBhQBAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAABvIhVeAAAAAAAAawAAAAQA
AAAAAAAAAAAAAMIATQAAAAAAEAAAAAAAAAAAAAAAywByAwAAAAAEAAAAAAAAAAAAAADCAEEAAAAA
AAQAAAAAAAAAAAAAAMIAEwQAAAAAEAAAAAAAAAAAAAAAywAaAAAAAAAAAAAAAQAAAHIFAAAFAAIA
AAAAAABJbnQzMgA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AU3lzdGVtLkRhdGEAbXNjb3JsaWIARGJDb21tYW5kAFNxbENvbW1hbmQAU1Rf
ZWJlYWE0NjM0YjBkNDYwMTg2ZWY1NTRlYzg2YmM5NGUAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UA
VmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBEYXRlVGlt
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFJlYWRMaW5lAFdyaXRlTGluZQBUeXBl
AEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3Nl
AEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0
ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUATW92ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9lYmVhYTQ2MzRiMGQ0NjAxODZlZjU1NGVj
ODZiYzk0ZS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24A
U3lzdGVtLlJlZmxlY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AU3FsQ29ubmVjdGlvbgBFeGNlcHRp
b24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVy
AGdldF9SZXNvdXJjZU1hbmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRX
cml0ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZWJlYWE0NjM0YjBkNDYwMTg2ZWY1NTRl
Yzg2YmM5NGUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNU
X2ViZWFhNDYzNGIwZDQ2MDE4NmVmNTU0ZWM4NmJjOTRlLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxl
cwBHZXRGaWxlcwBTZXR0aW5ncwBnZXRfQ29ubmVjdGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlw
dFJlc3VsdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0u
RGF0YS5TcWxDbGllbnQAQ3JlYXRlVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9u
UXVlcnkARGlyZWN0b3J5AAAAAB15AHkAeQB5AE0ATQBkAGQASABIAG0AbQBzAHMAAB9VAHMAZQBy
ADoAOgBMAG8AZwBGAG8AbABkAGUAcgAAC1wATABvAGcAXwAACS4AbABvAGcAACVVAHMAZQByADoA
OgBTAG8AdQByAGMAZQBGAG8AbABkAGUAcgAAJ1UAcwBlAHIAOgA6AEYAaQBsAGUARQB4AHQAZQBu
AHMAaQBvAG4AACdVAHMAZQByADoAOgBGAGkAbABlAEQAZQBsAGkAbQBpAHQAZQByAAAnVQBzAGUA
cgA6ADoAQQByAGMAaABpAHYAZQBGAG8AbABkAGUAcgAAK1UAcwBlAHIAOgA6AEMAbwBsAHUAbQBu
AHMARABhAHQAYQBUAHkAcABlAAAhVQBzAGUAcgA6ADoAUwBjAGgAZQBtAGEATgBhAG0AZQAAO1IA
ZQBhAGQAaQBuAGcAIABmAGkAbABlACAAbgBhAG0AZQBzACAAbwBuAGUAIABiAHkAIABvAG4AZQAA
AyoAACdSAGUAYQBkAGkAbgBnACAAZgBpAGwAZQAgAG4AYQBtAGUAOgAgAAANRABCAEMAbwBuAG4A
AAEATUIAdQBpAGwAZABpAG4AZwAgAFMAUQBMACAAcwB0AGEAdABlAG0AZQBuAHQAIAB0AG8AIABj
AHIAZQBhAHQAZQAgAHQAYQBiAGwAZQAAAyIAAANbAAAHXQAsAFsAAANdAAADXAAAgIlJAEYAIABF
AFgASQBTAFQAUwAgACgAUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAHMAeQBzAC4AbwBiAGoA
ZQBjAHQAcwAgAFcASABFAFIARQAgAG8AYgBqAGUAYwB0AF8AaQBkACAAPQAgAE8AQgBKAEUAQwBU
AF8ASQBEACgATgAnAFsAAQVdAC4AAAddACcAKQABQSAAQQBOAEQAIAB0AHkAcABlACAAaQBuACAA
KABOACcAVQAnACkAKQBEAFIATwBQACAAVABBAEIATABFACAAWwABH10AIABDAHIAZQBhAHQAZQAg
AFQAYQBiAGwAZQAgAAAFLgBbAAAFKABbAAAFXQAgAAAFLABbAAADKQAAH1MAUQBMACAAcwB0AGEA
dABlAG0AZQBuAHQAOgAgAAAjUwBRAEwAIABUAGEAYgBsAGUAIABjAHIAZQBhAHQAZQBkAABHQgBl
AGcAaQBuAG4AaQBuAGcAIABkAGEAdABhACAAaQBuAHMAZQByAHQAaQBvAG4AIABpAG4AdABvACAA
dABhAGIAbABlAAAZSQBuAHMAZQByAHQAIABpAG4AdABvACAAAAddACAAKAAABSkAIAAAEVYAQQBM
AFUARQBTACgAJwABBycALAAnAAEFJwApAAFpRABhAHQAYQAgAGkAbgBzAGUAcgB0AGkAbwBuACAA
aQBuAHQAbwAgAHQAYQBiAGwAZQAgAGMAbwBtAHAAbABlAHQAZQBkAC4AIABSAG8AdwBzACAAaQBu
AHMAZQByAHQAZQBkADoAIAAAA18AAHlNAG8AdgBlAGQAIAB0AGgAZQAgAGYAaQBsAGUAIAB0AG8A
IABhAHIAYwBoAGkAdgBlACAAZgBvAGwAZABlAHIAIABhAGYAdABlAHIAIABhAGQAZABpAG4AZwAg
AGQAYQB0AGUAdABpAG0AZQAgAHQAbwAgAGkAdAAANVMAUwBJAFMAIABTAGMAcgBpAHAAdAAgAHQA
YQBzAGsAIABjAG8AbQBwAGwAZQB0AGUAZAAAcVMAVABfAGUAYgBlAGEAYQA0ADYAMwA0AGIAMABk
ADQANgAwADEAOAA2AGUAZgA1ADUANABlAGMAOAA2AGIAYwA5ADQAZQAuAFAAcgBvAHAAZQByAHQA
aQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAfTgCOZDBSToWTQp/dT6caAAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARFlHAcUDhI9EUEODg4ODg4dDggOEkUOCA4OEkkOEk0EAAARQQQgAQ4OBCAA
EnUEIAASeQUgARJ9HAMgABwDIAAOBwAEDg4ODg4FAAESPQ4FAAIODg4GAAIdDg4OBSAAEoCRBiAB
EoCVHAQgARwcBSACDg4OBgADDg4ODgUAAQ4dDgYgAgEOEkUDIAAIBQACAQ4OCAABEoCpEYCtBSAA
EoCxByACAQ4SgLEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSXQMGEmEDBhIQAgYIAwYR
FAQAABJdBAAAEmEFAAEBEmEEAAASEAMAAAEECAASXQQIABJhBAgAEhAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2ViZWFhNDYzNGIwZDQ2MDE4
NmVmNTU0ZWM4NmJjOTRlAAAFAQAAAAAXAQASTWFudWxpZmUgRmluYW5jaWFsAAAoAQAjQ29weXJp
Z2h0IEAgTWFudWxpZmUgRmluYW5jaWFsIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAMg5AAAAAAAAAAAAAOI5AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUOQAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAABiBAAAAAAAAAAAAABiBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAFV5vIgAAAQAVXm8iPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEwgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAngMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAAEYAEwABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAATQBhAG4AdQBsAGkAZgBlACAARgBpAG4AYQBuAGMAaQBhAGwAAAAAAHAAJAAB
AEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQAXwBlAGIAZQBhAGEANAA2ADMA
NABiADAAZAA0ADYAMAAxADgANgBlAGYANQA1ADQAZQBjADgANgBiAGMAOQA0AGUAAAA+AA8AAQBG
AGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA4ADEANQAuADIANAAwADgANQAAAAAA
cAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBlAGIAZQBhAGEANAA2ADMANABi
ADAAZAA0ADYAMAAxADgANgBlAGYANQA1ADQAZQBjADgANgBiAGMAOQA0AGUALgBkAGwAbAAAAGwA
JAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAg
AE0AYQBuAHUAbABpAGYAZQAgAEYAaQBuAGEAbgBjAGkAYQBsACAAMgAwADIANAAAACoAAQABAEwA
ZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBs
AEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGUAYgBlAGEAYQA0ADYAMwA0AGIAMABkADQANgAwADEA
OAA2AGUAZgA1ADUANABlAGMAOAA2AGIAYwA5ADQAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1
AGMAdABOAGEAbQBlAAAAAABTAFQAXwBlAGIAZQBhAGEANAA2ADMANABiADAAZAA0ADYAMAAxADgA
NgBlAGYANQA1ADQAZQBjADgANgBiAGMAOQA0AGUAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADgAOAAxADUALgAyADQAMAA4ADUAAAAAAEYADwABAEEAcwBzAGUA
bQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAOAAxADUALgAyADQAMAA4ADUAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA9DkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="138"
            Column="29" />
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="158"
            Column="29" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="133.333333333334,42.6666666666667"
          Id="Package\Script Task"
          TopLeft="86.8749961163851,62.9473677299035" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>